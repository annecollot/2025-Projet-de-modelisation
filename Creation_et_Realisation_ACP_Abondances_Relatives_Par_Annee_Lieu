setwd("C:/.Louison/1A/Projet de Modélisation")

# Charger les bibliothèques nécessaires
library(dplyr)
library(tidyr)
library(readr)
library(FactoMineR)
library(factoextra)

# Charger le fichier
data <- read.csv2("DatasetIndiv_Final.csv", fileEncoding = "latin1")

# Supprimer la colonne abondance_relative si elle existe
if ("abondance_relative" %in% colnames(data)) {
  data <- data %>% select(-abondance_relative)
}

# Créer la colonne "lieu" selon les conditions
data <- data %>%
  mutate(lieu = case_when(
    Localisation == "Chenal principal" & Secteur == 1 ~ 1,
    Localisation == "Chenal principal" & Secteur == 2 ~ 2,
    Localisation == "Annexe secondaire" & Secteur == 1 ~ 3,
    TRUE ~ NA_real_  # Laisse NA pour les autres cas, si besoin
  ))

# Vérifier qu'on n'a pas de NA dans lieu avant d'aller plus loin
data <- data %>% filter(!is.na(lieu))

# Regrouper par année, lieu et espèce et sommer les abondances
data_grouped <- data %>%
  group_by(Year, lieu, cespece) %>%
  summarise(abondance = sum(abondance), .groups = "drop")

# Calcul des abondances relatives en %
data_grouped <- data_grouped %>%
  group_by(Year, lieu) %>%
  mutate(abondance_relative = 100 * abondance / sum(abondance)) %>%
  ungroup()

# Réorganiser le tableau : colonnes = espèces
data_finale <- data_grouped %>%
  select(Year, lieu, cespece, abondance_relative) %>%
  pivot_wider(names_from = cespece, values_from = abondance_relative, values_fill = 0)

# On garde que les 10 espèces les plus abondantes
colonnes_a_supprimer <- c("HOT", "GAR", "ABL", "TAC", "LOT", "OBR", "TOX", "LPP", "BBG", "CAG", "IDE", "BRX", "CAD", "CMI", "MIS", "BLN", "BRB", "BRO", "EPI", "GRE", "PER", "TRF", "BLE", "BRE", "CHA", "LOF", "PES", "TAN", "ANG", "PCH", "ROT", "SAN", "VAN", "CCO", "SIL")

# Supprimer les colonnes si elles existent
data_finale <- data_finale %>% select(-any_of(colonnes_a_supprimer))

# Créer la colonne concaténée
data_finale$annee_lieu <- paste(data_finale$Year, data_finale$lieu, sep="_")

# Réorganiser les colonnes pour que 'indiv' soit au début
data_finale <- data_finale[, c("annee_lieu", setdiff(names(data_finale), "data_finale"))]

# Séparer les colonnes
vars_quali <- data_finale[, c("Year", "lieu")]
etiquettes <- data_finale$annee_lieu
vars_quanti <- data_finale[, !(names(data_finale) %in% c("Year", "lieu", "annee_lieu"))]

# Fusionner pour passer à PCA
data_acp <- cbind(vars_quanti, vars_quali)

View(data_acp)

# Lancer l'ACP
res.pca <- PCA(data_acp, quali.sup = c(ncol(data_acp) - 1, ncol(data_acp)), graph = FALSE)

fviz_pca_ind(res.pca,
             label = "none",
             habillage = "lieu",
             addEllipses = TRUE,
             repel = TRUE) +
  ggplot2::geom_text(aes(label = etiquettes), vjust = -0.5, check_overlap = TRUE)

fviz_pca_var(res.pca,
             col.var = "contrib",   # couleur selon la contribution
             gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),  # palette
             repel = TRUE)          # éviter que les noms se chevauchent
